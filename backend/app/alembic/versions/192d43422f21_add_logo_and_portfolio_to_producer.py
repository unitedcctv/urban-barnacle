"""add_logo_and_portfolio_to_producer

Revision ID: 192d43422f21
Revises: add_user_id_to_producer
Create Date: 2025-10-24 15:04:56.605032

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '192d43422f21'
down_revision = 'add_user_id_to_producer'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_socialpost_platform'), table_name='socialpost')
    op.drop_index(op.f('ix_socialpost_post_id'), table_name='socialpost')
    op.drop_table('socialpost')
    op.add_column('producer', sa.Column('logo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('producer', sa.Column('portfolio_images', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('producer', 'portfolio_images')
    op.drop_column('producer', 'logo_url')
    op.create_table('socialpost',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('platform', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('post_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author_avatar', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('fetched_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('likes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reposts', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('replies', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('socialpost_pkey'))
    )
    op.create_index(op.f('ix_socialpost_post_id'), 'socialpost', ['post_id'], unique=True)
    op.create_index(op.f('ix_socialpost_platform'), 'socialpost', ['platform'], unique=False)
    # ### end Alembic commands ###
