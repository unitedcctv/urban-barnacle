/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as ConfirmEmailImport } from './routes/confirm-email'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSuadminImport } from './routes/_layout/suadmin'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutProducersImport } from './routes/_layout/producers'
import { Route as LayoutProducerImport } from './routes/_layout/producer'
import { Route as LayoutItemImport } from './routes/_layout/item'
import { Route as LayoutGalleryImport } from './routes/_layout/gallery'
import { Route as LayoutCreateitemImport } from './routes/_layout/createitem'
import { Route as LayoutBusinessplanImport } from './routes/_layout/businessplan'
import { Route as LayoutPaymentSuccessImport } from './routes/_layout/payment/success'
import { Route as LayoutPaymentCancelImport } from './routes/_layout/payment/cancel'

// Create/Update Routes

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const ConfirmEmailRoute = ConfirmEmailImport.update({
  path: '/confirm-email',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSuadminRoute = LayoutSuadminImport.update({
  path: '/suadmin',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProducersRoute = LayoutProducersImport.update({
  path: '/producers',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProducerRoute = LayoutProducerImport.update({
  path: '/producer',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutItemRoute = LayoutItemImport.update({
  path: '/item',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutGalleryRoute = LayoutGalleryImport.update({
  path: '/gallery',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCreateitemRoute = LayoutCreateitemImport.update({
  path: '/createitem',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBusinessplanRoute = LayoutBusinessplanImport.update({
  path: '/businessplan',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPaymentSuccessRoute = LayoutPaymentSuccessImport.update({
  path: '/payment/success',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPaymentCancelRoute = LayoutPaymentCancelImport.update({
  path: '/payment/cancel',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/confirm-email': {
      preLoaderRoute: typeof ConfirmEmailImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_layout/businessplan': {
      preLoaderRoute: typeof LayoutBusinessplanImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/createitem': {
      preLoaderRoute: typeof LayoutCreateitemImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/gallery': {
      preLoaderRoute: typeof LayoutGalleryImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/item': {
      preLoaderRoute: typeof LayoutItemImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/producer': {
      preLoaderRoute: typeof LayoutProducerImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/producers': {
      preLoaderRoute: typeof LayoutProducersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/suadmin': {
      preLoaderRoute: typeof LayoutSuadminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/payment/cancel': {
      preLoaderRoute: typeof LayoutPaymentCancelImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/payment/success': {
      preLoaderRoute: typeof LayoutPaymentSuccessImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutBusinessplanRoute,
    LayoutCreateitemRoute,
    LayoutGalleryRoute,
    LayoutItemRoute,
    LayoutProducerRoute,
    LayoutProducersRoute,
    LayoutSettingsRoute,
    LayoutSuadminRoute,
    LayoutIndexRoute,
    LayoutPaymentCancelRoute,
    LayoutPaymentSuccessRoute,
  ]),
  ConfirmEmailRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
])

/* prettier-ignore-end */
