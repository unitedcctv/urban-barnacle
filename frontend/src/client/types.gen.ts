// This file is auto-generated by @hey-api/openapi-ts

/**
 * Response model for balance check
 */
export type BalanceResponse = {
  balance_eth: string
  balance_wei: string
  has_enough_funds: boolean
  required_eth: string
  account_address: string
}

export type Body_images_upload_file = {
  file: Blob | File
}

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type Body_models_upload_model = {
  file: Blob | File
}

export type CheckoutRequest = {
  item_id: string
  success_url?: string | null
  cancel_url?: string | null
}

export type CheckoutResponse = {
  url: string
}

export type EmailConfirmation = {
  token: string
}

/**
 * Response model for account funding
 */
export type FundAccountResponse = {
  success: boolean
  transaction_hash: string
  funded_amount_eth: string
  new_balance_eth: string
  message: string
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type ItemCreate = {
  title: string
  description?: string | null
  images?: string | null
  model?: string | null
  certificate?: string | null
  is_original?: boolean
  variant_of?: string | null
  nft_token_id?: number | null
  nft_contract_address?: string | null
  nft_transaction_hash?: string | null
  nft_metadata_uri?: string | null
  is_nft_enabled?: boolean
}

export type ItemPublic = {
  title: string
  description?: string | null
  images?: string | null
  model?: string | null
  certificate?: string | null
  is_original?: boolean
  variant_of?: string | null
  nft_token_id?: number | null
  nft_contract_address?: string | null
  nft_transaction_hash?: string | null
  nft_metadata_uri?: string | null
  is_nft_enabled?: boolean
  id: string
  owner_id: string
  producer_id?: string | null
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type ItemUpdate = {
  title?: string | null
  description?: string | null
  images?: string | null
  model?: string | null
  certificate?: string | null
  is_original?: boolean
  variant_of?: string | null
  nft_token_id?: number | null
  nft_contract_address?: string | null
  nft_transaction_hash?: string | null
  nft_metadata_uri?: string | null
  is_nft_enabled?: boolean
}

/**
 * Item data with edit permissions
 */
export type ItemWithPermissions = {
  item: ItemPublic
  can_edit?: boolean
}

export type Message = {
  message: string
}

export type NavigationItem = {
  title: string
  path: string
  icon: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

export type ProducerCreate = {
  name: string
  location?: string | null
}

export type ProducerPublic = {
  name: string
  location?: string | null
  id: string
  created_at: string
}

export type ProducersPublic = {
  data: Array<ProducerPublic>
  count: number
}

export type ProducerUpdate = {
  name?: string | null
  location?: string | null
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  permissions?: UserPermission
  full_name?: string | null
  password: string
}

export type UserPermission = "superuser" | "guest" | "investor" | "producer"

export type UserPublic = {
  email: string
  is_active?: boolean
  permissions?: UserPermission
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  permissions?: UserPermission
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersConfirmEmailData = {
  requestBody: EmailConfirmation
}

export type UsersConfirmEmailResponse = Message

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsListPermissionsResponse = Array<string>

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type ItemsReadMyItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadMyItemsResponse = ItemsPublic

export type ItemsReadItemData = {
  id: string
}

export type ItemsReadItemResponse = ItemWithPermissions

export type ItemsUpdateItemData = {
  id: string
  requestBody: ItemUpdate
}

export type ItemsUpdateItemResponse = ItemPublic

export type ItemsDeleteItemData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type ItemsMintItemNftData = {
  id: string
}

export type ItemsMintItemNftResponse = ItemPublic

export type ImagesUploadFileData = {
  formData: Body_images_upload_file
  itemId: string
  userId: string
}

export type ImagesUploadFileResponse = {
  [key: string]: string
}

export type ImagesGetFilesData = {
  itemId: string
  userId: string
}

export type ImagesGetFilesResponse = {
  [key: string]: string | Array<string>
}

export type ImagesDeleteFileData = {
  fileName: string
  itemId: string
  userId: string
}

export type ImagesDeleteFileResponse = {
  [key: string]: string
}

export type ImagesGetFileData = {
  fileName: string
  itemId: string
  userId: string
}

export type ImagesGetFileResponse = unknown

export type ImagesDeleteItemImagesData = {
  itemId: string
}

export type ImagesDeleteItemImagesResponse = {
  [key: string]: string
}

export type ModelsUploadModelData = {
  formData: Body_models_upload_model
  itemId: string
  userId: string
}

export type ModelsUploadModelResponse = {
  [key: string]: string
}

export type ModelsGetModelData = {
  itemId: string
  userId: string
}

export type ModelsGetModelResponse = {
  [key: string]: string | null
}

export type ModelsDeleteModelData = {
  fileName: string
  itemId: string
  userId: string
}

export type ModelsDeleteModelResponse = {
  [key: string]: string
}

export type ModelsDownloadModelData = {
  fileName: string
  itemId: string
  userId: string
}

export type ModelsDownloadModelResponse = unknown

export type ModelsDeleteItemModelData = {
  itemId: string
}

export type ModelsDeleteItemModelResponse = {
  [key: string]: string
}

export type PaymentsCreateCheckoutSessionData = {
  requestBody: CheckoutRequest
}

export type PaymentsCreateCheckoutSessionResponse = CheckoutResponse

export type PaymentsPaymentSuccessData = {
  sessionId: string
}

export type PaymentsPaymentSuccessResponse = unknown

export type PaymentsPaymentCancelResponse = unknown

export type PaymentsStripeWebhookResponse = unknown

export type PaymentsGetStripeConfigResponse = unknown

export type ProducersReadProducersData = {
  limit?: number
  skip?: number
}

export type ProducersReadProducersResponse = ProducersPublic

export type ProducersCreateProducerData = {
  requestBody: ProducerCreate
}

export type ProducersCreateProducerResponse = ProducerPublic

export type ProducersReadProducerData = {
  id: string
}

export type ProducersReadProducerResponse = ProducerPublic

export type ProducersUpdateProducerData = {
  id: string
  requestBody: ProducerUpdate
}

export type ProducersUpdateProducerResponse = ProducerPublic

export type ProducersDeleteProducerData = {
  id: string
}

export type ProducersDeleteProducerResponse = Message

export type BlockchainCheckEthBalanceResponse = BalanceResponse

export type BlockchainFundAccountResponse = FundAccountResponse

export type BlockchainGetBlockchainStatusResponse = unknown

export type NavigationGetNavigationItemsData = {
  authorization?: string | null
}

export type NavigationGetNavigationItemsResponse = Array<NavigationItem>

export type AiChatResponse = unknown

export type AiRegisterWatchEndpointResponse = unknown

export type AiPopulateChunksEndpointResponse = unknown

export type AiDriveChangeWebhookData = {
  xGoogChannelToken?: string | null
  xGoogResourceState?: string
}

export type AiDriveChangeWebhookResponse = void

export type BusinessPlanDownloadBusinessPlanResponse = unknown

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserPublic

export type UsersApiCurrentUserResponse = UserPublic
